{"version":3,"sources":["components/UI/Card.js","components/Products/ProductItem.js","components/UI/LoadingIndicator.js","components/UI/ErrorModal.js","components/Ingredients/IngredientForm.js","components/Ingredients/Search.js","components/Ingredients/Ingredients.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","children","ProductItem","components_UI_Card","style","marginBottom","isFav","url","onClick","fetch","then","response","blob","fileURL","window","URL","createObjectURL","alink","document","href","download","click","LoadingIndicator","ErrorModal","React","memo","_useState","useState","_useState2","Object","slicedToArray","enteredTitle","setEnteredTitle","_useState3","_useState4","enteredAmount","setEnteredAmount","onSubmit","event","preventDefault","onAddIngredient","title","amount","htmlFor","type","id","value","onChange","target","loading","components_UI_LoadingIndicator","Fragment","onClose","onLoadIngredients","enteredFilter","setEnteredFilter","inputRef","useRef","useEffect","timer","setTimeout","current","query","length","concat","json","responseData","loadedIngredients","key","push","clearTimeout","ref","columns","field","headerName","width","editable","rows","name","Ingredients","userIngredients","setUserIngredients","setIsLoading","_useState5","_useState6","error","setError","_useState7","_useState8","selectedRows","setSelectedRows","_useState9","_useState10","pdfUrl","setPdfUrl","list","console","log","useCallback","filteredIngredients","UI_ErrorModal","DataGrid","height","checkboxSelection","disableSelectionOnClick","onSelectionModelChange","ids","selectedIDs","Set","selectedRowData","filter","row","has","variant","ingredient","data","arr","axios","post","prevUrlList","toConsumableArray","objectSpread2","catch","addIngredientHandler","map","prod","components_Products_ProductItem","App","components_Ingredients_Ingredients","defaults","baseURL","headers","rootElement","getElementById","createRoot","render","react","src_App"],"mappings":"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","file":"static/js/main.c3f637b8.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React, { useContext } from 'react';\n\nimport Card from '../UI/Card';\n// import { ProductsContext } from '../../context/products-context';\nimport './ProductItem.css';\n\nconst ProductItem = props => {\n\n  // const toggleFav = useContext(ProductsContext).toggleFav;\n\n  // const toggleFavHandler = () => {\n  //   toggleFav(props.id);\n  // };\n\n  const onButtonClick = () => {\n    // using Java Script method to get PDF file\n    // fetch('../../iTextTable.pdf').then(response => {\n    fetch('../../iTextTable.pdf').then(response => {\n        response.blob().then(blob => {\n            // Creating new object of PDF file\n            const fileURL = window.URL.createObjectURL(blob);\n            // Setting various property values\n            let alink = document.createElement('a');\n            alink.href = fileURL;\n            alink.download = 'iTextTable.pdf';\n            alink.click();\n        })\n    })\n}\n\n  return (\n    <Card style={{ marginBottom: '1rem' }}>\n      <div className=\"product-item\">\n        <h2 className={props.isFav ? 'is-fav' : ''}>{props.url}</h2>\n        {/* <p>{props.url}</p> */}\n        <button\n          className={!props.isFav ? 'button-outline' : ''}\n          onClick={onButtonClick}\n        >\n          {props.isFav ? 'Un-Favorite' : 'Favorite'}\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default ProductItem;\n","import React from 'react';\n\nimport './LoadingIndicator.css';\n\nconst LoadingIndicator = () => (\n  <div className=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingIndicator;\n","import React from 'react';\n\nimport './ErrorModal.css';\n\nconst ErrorModal = React.memo(props => {\n  return (\n    <React.Fragment>\n      <div className=\"backdrop\" onClick={props.onClose} />\n      <div className=\"error-modal\">\n        <h2>An Error Occurred!</h2>\n        <p>{props.children}</p>\n        <div className=\"error-modal__actions\">\n          <button type=\"button\" onClick={props.onClose}>\n            Okay\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default ErrorModal;\n","import React, { useState } from 'react';\n\nimport Card from '../UI/Card';\nimport LoadingIndicator from '../UI/LoadingIndicator';\nimport './IngredientForm.css';\n\nconst IngredientForm = React.memo(props => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onAddIngredient({ title: enteredTitle, amount: enteredAmount });\n  };\n\n  return (\n    <section className=\"ingredient-form\">\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Name</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={enteredTitle}\n              onChange={event => {\n                setEnteredTitle(event.target.value);\n              }}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input\n              type=\"number\"\n              id=\"amount\"\n              value={enteredAmount}\n              onChange={event => {\n                setEnteredAmount(event.target.value);\n              }}\n            />\n          </div>\n          <div className=\"ingredient-form__actions\">\n            <button type=\"submit\">Add Ingredient</button>\n            {props.loading && <LoadingIndicator />}\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default IngredientForm;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport Card from '../UI/Card';\nimport './Search.css';\n\nconst Search = React.memo(props => {\n  const { onLoadIngredients } = props;\n  const [enteredFilter, setEnteredFilter] = useState('');\n  const inputRef = useRef();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (enteredFilter === inputRef.current.value) {\n        const query =\n          enteredFilter.length === 0\n            ? ''\n            : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n        fetch(\n          'https://react-hooks-update.firebaseio.com/ingredients.json' + query\n        )\n          .then(response => response.json())\n          .then(responseData => {\n            const loadedIngredients = [];\n            for (const key in responseData) {\n              loadedIngredients.push({\n                id: key,\n                title: responseData[key].title,\n                amount: responseData[key].amount\n              });\n            }\n            onLoadIngredients(loadedIngredients);\n          });\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [enteredFilter, onLoadIngredients, inputRef]);\n\n  return (\n    <section className=\"search\">\n      <Card>\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={enteredFilter}\n            onChange={event => setEnteredFilter(event.target.value)}\n          />\n        </div>\n      </Card>\n    </section>\n  );\n});\n\nexport default Search;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport ProductItem from '../Products/ProductItem';\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\nimport Search from './Search';\nimport axios from 'axios';\nimport { DataGrid, GridColDef, gridColumnLookupSelector, GridValueGetterParams } from '@mui/x-data-grid';\n\nconst Ingredients = () => {\n  const [userIngredients, setUserIngredients] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [selectedRows, setSelectedRows] = useState([])\n  const [pdfUrl, setPdfUrl] = useState([])\n  const list = []\n\n  useEffect(() => {\n    console.log('RENDERING INGREDIENTS', userIngredients);\n  }, [userIngredients]);\n\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    setUserIngredients(filteredIngredients);\n  }, []);\n\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    const data = {\n      id: selectedRows[0].id,\n      amount: selectedRows[0].amount,\n      name: selectedRows[0].name,\n    };\n    console.log('data: ', data)\n    const arr = [data]\n    axios.post('/pdf/', arr)\n    .then(response => {\n      console.log('response: ', response.data);\n      // this.setState( { pdfUrls: [...this.state.pdfUrls, response.data] })\n      setPdfUrl(prevUrlList => [\n        ...prevUrlList,\n        { id: response.data.id, ...response.data }\n      ])\n      console.log('response: state', pdfUrl);\n      list.push(response.data)\n      console.log('response: state list', list);\n    })\n    .catch(error => {\n      console.log('error: ', error)\n    });\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    setIsLoading(true);\n    fetch(\n      `https://react-hooks-update.firebaseio.com/ingredients/${ingredientId}.jon`,\n      {\n        method: 'DELETE'\n      }\n    ).then(response => {\n      setIsLoading(false);\n      setUserIngredients(prevIngredients =>\n        prevIngredients.filter(ingredient => ingredient.id !== ingredientId)\n      );\n    }).catch(error => {\n      setError('Something went wrong!');\n      setIsLoading(false);\n    });\n  };\n\n  const clearError = () => {\n    setError(null);\n  }\n\n  return (\n    <div className=\"App\">\n      {error && <ErrorModal onClose={clearError}>{error}</ErrorModal>}\n\n      {/* <IngredientForm\n        onAddIngredient={addIngredientHandler}\n        loading={isLoading}\n      />\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientsHandler} />\n        <IngredientList\n          ingredients={userIngredients}\n          onRemoveItem={removeIngredientHandler}\n        />\n      </section> */}\n      <DataGrid \n      style={{ height: 400, width: '50%'}}\n      rows={rows} \n      columns={columns} \n      checkboxSelection\n      disableSelectionOnClick\n      onSelectionModelChange={(ids) => {\n        const selectedIDs = new Set(ids);\n        const selectedRowData = rows.filter((row) =>\n          selectedIDs.has(row.id)\n        );\n        setSelectedRows(selectedRowData);\n        // this.setState( { selectedRows: selectedRowData } );\n        // console.log(selectedRowData);\n        console.log('selectedRows', selectedRows)\n      }}\n      />\n      <button \n        variant=\"contained\"\n        onClick={() => {\n          addIngredientHandler()\n        }}>Contained\n      </button>\n      <ul className=\"products-list\">\n        {pdfUrl.map(prod => (\n          <ProductItem\n            key={prod.id}\n            id={prod.id}\n            url={prod.url}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\nconst columns: GridColDef[] = [\n  { field: 'id', headerName: 'ID', width: 90 },\n  {\n    field: 'name',\n    headerName: 'Name',\n    width: 150,\n    editable: true,\n  },\n  {\n    field: 'amount',\n    headerName: 'Amount',\n    type: 'number',\n    width: 110,\n    editable: true,\n  },\n \n];\n\nconst rows = [\n  { id: 1, name: 'Snow', amount: 35 },\n  { id: 2, name: 'Lannister', amount: 42 },\n  { id: 3, name: 'Lannister', amount: 45 },\n  { id: 4, name: 'Stark', amount: 16 },\n  { id: 5, name: 'Targaryen', amount: null },\n];\nexport default Ingredients;\n","import React from 'react';\n\nimport Ingredients from './components/Ingredients/Ingredients';\n\nconst App = props => {\n  return <Ingredients />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport './index.css';\nimport App from './App';\naxios.defaults.baseURL =  'http://localhost:8080/api'\n// axios.defaults.headers.common['Authorization'] = 'AUTH TOKEN';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}